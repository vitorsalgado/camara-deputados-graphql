type PartySimple implements Node {
  id: ID!
  acronym: String!
  name: String!
  uri: String!
}

type Party {
  id: ID!
  acronym: String!
  name: String!
  uri: String!
  leader: Deputy
}

type PartySimpleEdge implements Edge {
  cursor: String
  node: PartySimple
}

type PartySimpleConnection implements Connection {
  pageInfo: PageInfo
  edges: [PartySimpleEdge]
}

enum PartiesOrderBy {
  ID
  ACRONYM
  NAME
  STARTDATE
  ENDATE
}

extend type Query {
  party(id: ID!): Party
  partyByAcronym(acronym: String!): Party
  parties(acronym: String, startDate: String, endDate: String, termId: Int, page: Int, limit: Int, order: Order, orderBy: PartiesOrderBy): PartySimpleConnection
}
